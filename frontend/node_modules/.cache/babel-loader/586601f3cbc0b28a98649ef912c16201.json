{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeswa\\\\Documents\\\\online-clipboard\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Button, Tooltip, Container, Textarea, Input, InputRightElement, InputGroup, useToast, Box } from '@chakra-ui/react';\nimport Navbar from './components/Navbar.js';\nimport { Search2Icon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nconst ToastContext = /*#__PURE__*/React.createContext(_c = () => {}); // create provider\n\n_c2 = ToastContext;\nconst breakpoints = {\n  base: \"90%\",\n  sm: '90%',\n  md: '80%',\n  lg: '70%',\n  xl: '70%',\n  '2xl': '70%'\n};\n\nfunction Toast(props) {\n  _s();\n\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: props.variant,\n    colorScheme: props.colorScheme,\n    bg: props.bg,\n    width: props.width,\n    marginBottom: props.marginBottom,\n    marginTop: props.marginTop,\n    marginLeft: props.ml,\n    onClick: () => {\n      props.submit();\n      toast({\n        title: props.title,\n        description: props.description,\n        status: props.status,\n        duration: props.duration,\n        isClosable: props.closable\n      });\n      navigator.clipboard.writeText(props.data);\n    },\n    children: \"Copy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toast, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c3 = Toast;\n\nfunction ToastBox(props) {\n  _s2();\n\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginTop: props.mt,\n    ml: props.ml,\n    borderWidth: props.bw,\n    borderRadius: props.br,\n    minH: props.minH,\n    display: props.display,\n    paddingTop: props.pt,\n    paddingLeft: props.pl,\n    as: \"button\",\n    width: props.width,\n    fontWeight: props.fontWeight,\n    onClick: () => {\n      toast({\n        title: props.title,\n        description: props.description,\n        status: props.status,\n        duration: props.duration,\n        isClosable: props.closable\n      });\n      navigator.clipboard.writeText(props.data);\n    },\n    children: props.data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ToastBox, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c4 = ToastBox;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      if (e.key === 'Enter') {\n        axios.post(\"http://localhost:2222/retrive\", {\n          retrive_id: e.target.value\n        }).then(res => {\n          if (res.data.msg === \"success\") {\n            this.setState({\n              resp: res.data.data\n            });\n          } else {\n            this.setState({\n              resp: \"Invalid retrive id\"\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      if (this.state.value != \"\" && this.state.value != null) {\n        console.log(`value: ${this.state.value}`);\n        axios.post(\"http://localhost:2222/paste\", {\n          data: this.state.value\n        }, {\n          \"accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        }).then(response => {\n          this.setState({\n            id: response.data.id,\n            subFailed: false\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        this.setState({\n          error: true,\n          subFailed: true\n        });\n      }\n    };\n\n    this.state = {\n      id: null,\n      value: null,\n      resp: null,\n      error: false,\n      subFailed: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxW: breakpoints,\n        maxH: breakpoints,\n        bg: \"white\",\n        style: {\n          marginTop: \"60px\",\n          borderRadius: \"10px\",\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Paste your text here\",\n          colorScheme: \"white\",\n          color: \"black\",\n          isInvalid: this.state.error,\n          size: \"lg\",\n          height: \"200px\",\n          focusBorderColor: \"black\",\n          onChange: e => {\n            if (e.target.value !== \"\") {\n              this.setState({\n                value: e.target.value,\n                error: false\n              });\n            } else if (e.target.value !== \"\" && this.state.error === true) {\n              this.setState({\n                error: false\n              });\n            } else {\n              this.setState({\n                error: true\n              });\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"click to submit\",\n          placement: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(Toast, {\n            variant: \"solid\",\n            colorScheme: \"white\",\n            bg: \"#56A6DC\",\n            width: \"100%\",\n            marginTop: \"15px\",\n            submit: this.handleSubmit,\n            title: !this.state.subFailed ? \"Created Successfully\" : \"Invalid input\",\n            description: !this.state.subFailed ? \"clipboard \" : \"Invalid input\",\n            children: \"Save to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), this.state.id !== null ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          shouldWrapChildren: true,\n          label: \"click to copy\",\n          placement: \"bottom\",\n          children: [\"Your Retrive ID: \", /*#__PURE__*/_jsxDEV(ToastBox, {\n            data: this.state.id,\n            title: \"Copied to Clipboard.\",\n            description: \"Retrive ID copied to Clipboard.\",\n            status: \"success\",\n            duration: 1500,\n            closable: true,\n            mt: \"10px\",\n            fontWeight: \"semibold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxW: breakpoints,\n        maxH: breakpoints,\n        bg: \"white\",\n        style: {\n          marginTop: \"60px\",\n          borderRadius: \"10px\",\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(InputRightElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(Search2Icon, {\n              color: \"gray.300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your retrive ID...\",\n            onKeyPress: this.handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), this.state.resp !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            label: \"click to copy\",\n            shouldWrapChildren: true,\n            placement: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(ToastBox, {\n              mt: \"10px\",\n              bw: \"1px\",\n              br: \"lg\",\n              width: \"100%\",\n              minH: \"100px\",\n              display: \"flex\",\n              pt: \"20px\",\n              pl: \"10px\",\n              data: this.state.resp,\n              title: \"Copied to Clipboard.\",\n              description: \"Text copied to you clipboard.\",\n              status: \"success\",\n              duration: 1500,\n              closable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ToastContext$React.createContext\");\n$RefreshReg$(_c2, \"ToastContext\");\n$RefreshReg$(_c3, \"Toast\");\n$RefreshReg$(_c4, \"ToastBox\");","map":{"version":3,"sources":["C:/Users/jeswa/Documents/online-clipboard/frontend/src/App.js"],"names":["React","Component","useState","Button","Tooltip","Container","Textarea","Input","InputRightElement","InputGroup","useToast","Box","Navbar","Search2Icon","axios","require","ToastContext","createContext","breakpoints","base","sm","md","lg","xl","Toast","props","toast","variant","colorScheme","bg","width","marginBottom","marginTop","ml","submit","title","description","status","duration","isClosable","closable","navigator","clipboard","writeText","data","ToastBox","mt","bw","br","minH","display","pt","pl","fontWeight","App","constructor","handleSearch","e","key","post","retrive_id","target","value","then","res","msg","setState","resp","catch","error","console","log","handleSubmit","state","response","id","subFailed","render","borderRadius","padding"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Container,\r\n  Textarea,\r\n  Input,\r\n  InputRightElement,\r\n  InputGroup,\r\n  useToast,\r\n    Box\r\n} from '@chakra-ui/react';\r\nimport Navbar from './components/Navbar.js';\r\nimport { Search2Icon } from \"@chakra-ui/icons\";\r\nconst axios = require(\"axios\");\r\n\r\n\r\nconst ToastContext = React.createContext(() => {});\r\n\r\n// create provider\r\n\r\n\r\nconst breakpoints = {\r\n  base: \"90%\",\r\n  sm: '90%',\r\n  md: '80%',\r\n  lg: '70%',\r\n  xl: '70%',\r\n  '2xl': '70%',\r\n}\r\n\r\nfunction Toast(props) {\r\n  const toast = useToast()\r\n  return (\r\n    <Button\r\n      variant={props.variant}\r\n      colorScheme={props.colorScheme}\r\n      bg={props.bg}\r\n      width={props.width}\r\n      marginBottom={props.marginBottom}\r\n      marginTop={props.marginTop}\r\n      marginLeft={props.ml}\r\n      onClick={() =>\r\n        {\r\n          props.submit();\r\n          toast({\r\n          title: props.title,\r\n          description: props.description,\r\n          status: props.status,\r\n          duration: props.duration,\r\n          isClosable: props.closable,\r\n        })\r\n        navigator.clipboard.writeText(props.data)}\r\n      }\r\n    >\r\n      Copy\r\n    </Button>\r\n  )\r\n}\r\n\r\nfunction ToastBox(props){\r\n  const toast = useToast()\r\n  return (\r\n    <Box\r\n      marginTop={props.mt}\r\n      ml={props.ml}\r\n      borderWidth={props.bw} \r\n      borderRadius={props.br}\r\n      minH={props.minH}\r\n      display={props.display}\r\n      paddingTop={props.pt}\r\n      paddingLeft={props.pl}\r\n      as=\"button\"\r\n      width={props.width}\r\n      fontWeight={props.fontWeight}\r\n      onClick={() => {\r\n        \r\n        toast({\r\n          title: props.title,\r\n          description: props.description,\r\n          status: props.status,\r\n          duration: props.duration,\r\n          isClosable: props.closable,\r\n        })\r\n        navigator.clipboard.writeText(props.data)\r\n      }\r\n      }\r\n    >\r\n      {props.data}\r\n    </Box>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      id: null,\r\n      value: null, \r\n      resp: null,\r\n      error:false,\r\n      subFailed: false\r\n    }\r\n  }\r\n\r\n  handleSearch = (e) => {\r\n    if(e.key === 'Enter'){\r\n      axios.post(\"http://localhost:2222/retrive\", {\r\n        retrive_id: e.target.value\r\n      }).then(res => {\r\n        if(res.data.msg === \"success\"){\r\n          this.setState({\r\n            resp: res.data.data\r\n            \r\n          })\r\n        }else{\r\n          this.setState({\r\n            resp: \"Invalid retrive id\"\r\n            \r\n          })\r\n        }\r\n        \r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n  handleSubmit = (e) => {\r\n    if(this.state.value != \"\" && this.state.value != null){\r\n      console.log(`value: ${this.state.value}`)\r\n\r\n      axios.post(\"http://localhost:2222/paste\", {\r\n        data: this.state.value\r\n      }, \r\n      {\r\n        \"accept\": \"application/json\",\r\n        \"Content-type\": \"application/json\"\r\n      }).then((response) => {\r\n          this.setState({\r\n            id: response.data.id,\r\n            subFailed: false\r\n          })\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }else{\r\n        this.setState({\r\n          error: true,\r\n          subFailed: true\r\n        })\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Container\r\n        maxW={breakpoints}\r\n        maxH={breakpoints}\r\n         bg=\"white\" style={{\r\n          marginTop: \"60px\",\r\n          borderRadius: \"10px\",\r\n          padding: \"20px\",\r\n        }}>\r\n          <Textarea\r\n             placeholder=\"Paste your text here\"\r\n             colorScheme=\"white\"\r\n             color=\"black\"\r\n             isInvalid={this.state.error}\r\n             size=\"lg\"\r\n             height=\"200px\"\r\n             focusBorderColor=\"black\"\r\n             onChange={(e) => {\r\n               if(e.target.value !==\"\"){\r\n                 this.setState({\r\n                   value: e.target.value,\r\n                   error: false\r\n                  })\r\n\r\n                }else if(e.target.value !==\"\" && this.state.error === true){\r\n                 this.setState({error:false})\r\n               }else{\r\n                 this.setState({\r\n                   error:true\r\n                 })\r\n               }\r\n              }}\r\n             />\r\n          <Tooltip label=\"click to submit\" placement=\"bottom\">\r\n                <Toast\r\n              variant=\"solid\"\r\n              colorScheme=\"white\"\r\n              bg=\"#56A6DC\"\r\n              width='100%'\r\n              marginTop=\"15px\"\r\n              submit={this.handleSubmit}\r\n              title={(!this.state.subFailed)? \"Created Successfully\": \"Invalid input\"}\r\n              description={(!this.state.subFailed)? \"clipboard \": \"Invalid input\"}\r\n          >\r\n            Save to Clipboard\r\n          </Toast>\r\n          </Tooltip>\r\n          \r\n            {(this.state.id !== null) ? <Tooltip shouldWrapChildren label=\"click to copy\" placement=\"bottom\">\r\n            Your Retrive ID: <ToastBox\r\n            data={this.state.id}\r\n            title='Copied to Clipboard.' \r\n            description=\"Retrive ID copied to Clipboard.\" \r\n            status='success'\r\n            duration={1500}\r\n            closable={true}\r\n            mt=\"10px\"\r\n            fontWeight='semibold'\r\n         /> </Tooltip>: <div></div>}\r\n          \r\n        </Container>\r\n        <Container\r\n            maxW={breakpoints}\r\n            maxH={breakpoints}\r\n            bg=\"white\" style={{\r\n          marginTop: \"60px\",\r\n          borderRadius: \"10px\",\r\n          padding: \"20px\",\r\n        }}>\r\n          <InputGroup size=\"lg\">\r\n            <InputRightElement\r\n                pointerEvents='none'\r\n                children={<Search2Icon color='gray.300' />}/>\r\n            <Input\r\n                placeholder=\"Enter your retrive ID...\"\r\n                onKeyPress={this.handleSearch}\r\n            />\r\n          </InputGroup>\r\n          {(this.state.resp !== null) ? <>\r\n            <Tooltip label=\"click to copy\" shouldWrapChildren placement=\"auto\">\r\n            <ToastBox \r\n              mt=\"10px\" \r\n              bw=\"1px\" \r\n              br=\"lg\" \r\n              width=\"100%\"\r\n              minH=\"100px\" \r\n              display=\"flex\" \r\n              pt=\"20px\" \r\n              pl=\"10px\"\r\n              data={this.state.resp} \r\n              title='Copied to Clipboard.' \r\n              description=\"Text copied to you clipboard.\" \r\n              status='success'\r\n              duration={1500}\r\n              closable={true}\r\n            />\r\n            </Tooltip>\r\n          </>: <div></div>}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}