{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeswa\\\\Documents\\\\online-clipboard\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport { extendTheme, ChakraProvider } from '@chakra-ui/react';\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  primary: {\n    main: \"#ffffff\"\n  },\n  submit: {\n    main: \"2374AB\"\n  }\n};\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false\n};\nconst theme = extendTheme({\n  styles: {\n    global: props => ({\n      \"html, body\": {\n        background: \"#C1CCD7\" //mode(light mode color, dark mode color)\n\n      }\n    })\n  },\n  config,\n  colors\n});\n\nfunction Final() {\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    initialColorMode: config.initialColorMode,\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Final;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Final, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["C:/Users/jeswa/Documents/online-clipboard/frontend/src/index.js"],"names":["React","ReactDOM","App","Route","Link","BrowserRouter","Router","extendTheme","ChakraProvider","mode","colors","primary","main","submit","config","initialColorMode","useSystemColorMode","theme","styles","global","props","background","Final","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,aAAa,IAAIC,MAAtC,QAAoD,kBAApD;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA2C,kBAA3C;AACA,SAAQC,IAAR,QAAmB,wBAAnB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GADI;AAIbC,EAAAA,MAAM,EAAE;AACND,IAAAA,IAAI,EAAE;AADA;AAJK,CAAf;AASA,MAAME,MAAM,GAAG;AACbC,EAAAA,gBAAgB,EAAE,OADL;AAEbC,EAAAA,kBAAkB,EAAE;AAFP,CAAf;AAKA,MAAMC,KAAK,GAAGV,WAAW,CAAC;AAAEW,EAAAA,MAAM,EAAE;AAClCC,IAAAA,MAAM,EAAGC,KAAD,KAAY;AAClB,oBAAc;AACZC,QAAAA,UAAU,EAAE,SADA,CACY;;AADZ;AADI,KAAZ;AAD0B,GAAV;AAMvBP,EAAAA,MANuB;AAMfJ,EAAAA;AANe,CAAD,CAAzB;;AAQA,SAASY,KAAT,GAAiB;AACf,sBACE,QAAC,cAAD;AAAgB,IAAA,gBAAgB,EAAER,MAAM,CAACC,gBAAzC;AAA2D,IAAA,KAAK,EAAEE,KAAlE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEf;AAA3B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQoB,K;AAYTrB,QAAQ,CAACsB,MAAT,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QAFF,EAGEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport { extendTheme, ChakraProvider} from '@chakra-ui/react';\r\nimport {mode} from \"@chakra-ui/theme-tools\";\r\n\r\nconst colors = {\r\n  primary: {\r\n    main: \"#ffffff\",\r\n  },\r\n  submit: {\r\n    main: \"2374AB\"\r\n  }\r\n}\r\n\r\nconst config = {\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ styles: {\r\n  global: (props) => ({\r\n    \"html, body\": {\r\n      background: \"#C1CCD7\",  //mode(light mode color, dark mode color)\r\n    },\r\n  }),\r\n}, config, colors})\r\n\r\nfunction Final() {\r\n  return (\r\n    <ChakraProvider initialColorMode={config.initialColorMode} theme={theme}>\r\n      <Router>\r\n      <Route path=\"/\" component={App} />  \r\n      <App />\r\n      </Router>\r\n    </ChakraProvider>\r\n  )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <Final />,\r\n  document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}